HTML Presentations
========================================================
author: Xavier Bryant
date: March 1 2021
font-import: http://fonts.googleapis.com/css2?family=Akaya+Kanadaka
font-family: 'Akaya Kanadaka'
transition: zoom
css: custom.css


```{r, results='hide', include="FALSE"}
library(Stat2Data)
```


Introduction
========================================================

In this assignment, I will be loading a data set and making basic visualizations from the *Stat2Data* package. I will be working with the *Backpack* data set. I load it here: 

```{r}
data(Backpack)
``` 
  

~~The data set describes: *Weights of College Student Backpack*~~

It is a data frame with 100 observations on the following 9 variables.

Source: [CRAN: Stat2Data pacakage](cran.r-project.org/web/packages/Stat2Data/Stat2Data.pdf)


Variables
========================================================
incremental: true
type: exclaim


- *BackpackWeight*: Backpack weight (in pounds)
- *BodyWeight*: Body weight (in pounds)
- *Ratio*: BackpackWeight/BodyWeight
- *BackProblems*: 0=no or 1=yes

***

- *Major*: Code for academic major
- *Year*: Year in school
- *Sex*: a factor with levels Female Male
- *Status*: Graduate or undergraduate? G or U
- *Units*: Number of credits taken that quarter


College student with a backpack
========================================================

![student-backpack](https://collegeinfogeek.com/wp-content/uploads/2019/07/Backpack-Essentials.jpg)

Regression Formula
========================================================

</br>

$$ BackpackWeight_i = \beta_0 + \beta_1 BodyWeight_i + \epsilon_i $$



Regression Plot: Body Weight on Backpack Weight
========================================================

```{r, echo=FALSE, message=F, warning=F,fig.align="center"}
attach(Backpack)
plot(BodyWeight, BackpackWeight, main="BackpackWeight vs BodyWeight")
abline(lm(BackpackWeight~BodyWeight, data=Backpack))
```




Interactive Plot: Body Weight on Backpack Weight
========================================================
type: alert 
transition: zoom

```{r, include=FALSE, fig.align="center", message = FALSE}

library(plotly)

x = BodyWeight
y = BackpackWeight

data = data.frame(x, y)

p = plot_ly(data, x=x, y=y, type="scatter")

htmlwidgets::saveWidget(p, 'plotly.html')

```

<style>
  .p_iframe iframe {
    width:90%;
    height:576px;
}
</style>

<div class="p_iframe">
<iframe frameborder="0" seamless='seamless' scrolling=no src="plotly.html"></iframe>
</div>



